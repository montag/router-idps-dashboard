input {
  tcp {
    type => "syslog"
    port => 5140
  }
}

#udp syslogs stream via 5140
input {
  udp {
    type => "syslog"
    port => 5140
  }
}

# Elastic Beats input
input {
  beats {
    port => 5044
  }
}

output {
  elasticsearch {
    hosts => "elasticsearch:9200"
    index => "logstash-%{+YYYY.MM.dd}"
  }
}

filter {
  if [type] == "suricataIDPS" {
    json {
      source => "message"
    }
    date {
      match => ["timestamp", "ISO8601"]
    }
    # Geolocate
    if [event_type] == "alert" {
      if [src_ip] {
        geoip {
          source => "src_ip"
          target => "geoip"
          database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
        }
        mutate {
          convert => ["[geoip][coordinates]", "float"]
        }
      }
      else if ![geoip.ip] {
        if [dest_ip]  {
          geoip {
            source => "dest_ip"
            target => "geoip"
            database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
          }
          mutate {
            convert => ["[geoip][coordinates]", "float"]
          }
        }
      }
      # Suricata annotations
      if [alert][signature] =~ /^ET/ {
        mutate {
          add_tag => ["ET-Sig"]
          add_field => ["ids_rule_type", "Emerging Threats"]
          add_field => ["Signature_Info", "http://doc.emergingthreats.net/bin/view/Main/%{[alert][signature_id]}"]
        }
      }
      if [alert][signature] =~ /^SURICATA/ {
        mutate {
          add_tag => ["SURICATA-Sig"]
          add_field => ["ids_rule_type", "Suricata"]
        }
      }
    }
    # Add FQDN via reverse DNS lookup
    mutate {
      add_field => { "src_FQDN" => "%{src_ip}" }
      add_field => { "dest_FQDN" => "%{dest_ip}" }
    }

    dns {
      action => "replace"
      reverse => [ "src_FQDN" ]
    }

    dns {
      action => "replace"
      reverse => [ "dest_FQDN" ]
    }

    # Add TCP/UDP Service names
    translate {
      dictionary_path => '/usr/share/logstash/dictionary/service-names-port-numbers.csv'
      field => "dest_port"
      destination => "dest_port_serviceName"
    }
  }
}

